<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->
<constant value="0" name="STOPPED"/>
<constant value="1" name="LEFT"/>
<constant value="2" name="RIGHT"/>
<constant value="300" name="EDGE"/>
<constant value="300" name="TARGET"/>
<constant value="500" name="THR"/>


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="1" name="thymio-II">#*  File: LineFollow
	Date: Sept, 2022
	Author: CSCI 1108: Experimental Robotics.
	Purpose: Lab 6, Modeling the Real World 
	Description: A program that makes the Thymio Robot follow a black
	             taped line.
*#

var state = STOPPED                          # variable declarations
var min
var max
var mean
motor.left.target = 0                        # reset motors
motor.right.target = 0

onevent button.forward                       # on forward button press
  state = LEFT                               # transition to LEFT state

onevent button.backward                      # on backward button press
  state = STOPPED                            # transition to STOPPED state
  motor.left.target = 0                      # stop motors
  motor.right.target = 0
	
onevent prox                                 # on prox event
  if state != STOPPED then                   # if robot is moving
    # if moving left and not sensing black line
    if state == LEFT and  prox.ground.delta[0] >= EDGE then
      state = RIGHT                          #  transition to RIGHT state
      motor.left.target = TARGET             #  move right
      motor.right.target = 0
    end
    
    # if moving right and sensing black line
    if state == RIGHT and prox.ground.delta[0] &lt; EDGE then
      state = LEFT                           #  transition to LEFT state
      motor.left.target = 0                  #  move left
      motor.right.target = TARGET
    end
    	  
 
    	 
    	 
    	  
    	  
  end
   call math.stat(prox.horizontal[0:4],min,max,mean )
   if(state==RIGHT) then 
    	
    	  if (max>THR) then
    	  	state=STOPPED
    	  	motor.left.target=0
    	  	motor.right.target=0
    	  	
    	  end

	if(state==STOPPED) and max&lt;=THR then
    	  state=LEFT
    	  motor.left.target=TARGET
    	  motor.right.target=TARGET
    	  end

end
if(state==STOPPED) and max&lt;THR then
    	  state=LEFT
    	  motor.left.target=TARGET
    	  motor.right.target=TARGET
    	  end
</node>


</network>
