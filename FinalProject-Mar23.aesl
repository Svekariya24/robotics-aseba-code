<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->
<constant value="200" name="SPEED"/>
<constant value="200" name="EDGE"/>
<constant value="0" name="STOPPED"/>
<constant value="1" name="LEFT"/>
<constant value="2" name="RIGHT"/>
<constant value="3" name="FORWARD"/>
<constant value="1400" name="THR"/>
<constant value="4" name="TURNING_LEFT"/>
<constant value="5" name="TURNING_RIGHT"/>
<constant value="100" name="BLOCKED"/>
<constant value="3470" name="THR1"/>
<constant value="1100" name="THR2"/>


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="1" name="thymio-II">	var state=STOPPED
var direction=0
var test=0
var counter=0
call leds.circle(0,0,0,0,0,0,0,0)


motor.left.target=0
motor.right.target=0

onevent button.forward
	state=FORWARD
onevent prox 
	
	 if state != STOPPED then                   
   		if (state==FORWARD) then
   			motor.left.target=SPEED
   			motor.right.target=SPEED
   			timer.period[0]=200
   		end
	    if state == LEFT and  prox.ground.delta[0] >= EDGE then
	      state = RIGHT                          #  transition to RIGHT state
	      motor.left.target = SPEED             	#  move right
	      motor.right.target = 0
	      
	    end
	    
	     if (state==FORWARD) and prox.ground.delta[1] &lt;= EDGE then
	      state = RIGHT                          #  transition to RIGHT state
	      motor.left.target = SPEED             	#  move right
	      motor.right.target = 0
	    end
	    
	    if state == RIGHT and prox.ground.delta[0] &lt; EDGE then
	      state = LEFT                           #  transition to LEFT state
	      motor.left.target = 0                  #  move left
	      motor.right.target = SPEED
	      
	    end  
	    
#	    if (state==TURNING_LEFT) then
#	    		
#	    end
	    
	     if (counter==0) and (prox.horizontal[1]>THR1) and (prox.horizontal[2]&lt;=THR2) and 		(prox.horizontal[2]&lt;=THR2) then  
	     
	     		state=TURNING_LEFT
	     		motor.left.target=-SPEED
	     		motor.right.target=SPEED
	     		counter++
	     		timer.period[0]=900
	     end
	        if (counter==2) and (prox.horizontal[1]>THR1) and (prox.horizontal[2]&lt;=THR2) and 		(prox.horizontal[2]&lt;=THR2) then  
	 
	     		state=TURNING_RIGHT
	     		motor.left.target=SPEED
	     		motor.right.target=-SPEED
	     	
	     	counter++
	     	timer.period[0]=900
	     end
  end	

onevent timer0
	if (state==RIGHT)  then
		state=LEFT
	end
	if (state==LEFT) then
		state=RIGHT
	end
	

	if (state==FORWARD) and prox.ground.delta[0]&lt;=EDGE   then
		state=LEFT
	end
	if (state==FORWARD) and prox.ground.delta[1]&lt;=EDGE   then
		state=RIGHT
	end
	if (state==TURNING_LEFT) then
		state=FORWARD
		counter++
	end
	if (state==TURNING_RIGHT) then
		state=FORWARD
	end
	
	



</node>


</network>
